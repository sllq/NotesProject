@page "/"

@using NotesProject.Data

@inject NotesProject.Services.Interface NoteItemService
@inject MudBlazor.ISnackbar snackBar

<MudCard Elevation="25">
    <MudCardHeader>
        <CardHeaderContent>
            <MudText Typo="Typo.h6">Add / Edit Notes</MudText>
        </CardHeaderContent>
    </MudCardHeader>
    <MudCardContent>
        <MudTextField @bind-Value="note.Title" Label="Title" Variant="Variant.Text" Margin="Margin.Normal"></MudTextField>
        <MudTextField @bind-Value="note.Contents" Label="Contents" Variant="Variant.Text" Margin="Margin.Normal"></MudTextField>
        <MudTextField @bind-Value="note.Tags" Label="Tags" Variant="Variant.Text" Margin="Margin.Normal"></MudTextField>
        <br />
        <MudButton Variant="Variant.Filled" Color="Color.Success" OnClick="Save">Save Note</MudButton>
    </MudCardContent>
</MudCard>
<br />
<MudTable Elevation="25" Items="GetItems()" Filter="new Func<NoteItem, bool>(Search)" @bind-Note="note">
    <ToolBarContent>
        <MudText Typo="Typo.h6">Notes</MudText>
        <MudToolBarSpacer />
        <MudTextField @bind-Value="searchString" Placeholder="Search..." Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
    </ToolBarContent>
    <HeaderContent>
        <MudTh>Id</MudTh>
        <MudTh>Title</MudTh>
        <MudTh>Contents</MudTh>
        <MudTh>Tags</MudTh>
        <MudTh>Is Done</MudTh>
        <MudTh>Actions</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Id">@context.ID</MudTd>
        <MudTd DataLabel="Title">@context.Title</MudTd>
        <MudTd DataLabel="Contents">@context.Contents</MudTd>
        <MudTd DataLabel="Tags">@context.Tags</MudTd>
        <MudTd DataLabel="IsDone">
            <MudCheckBox @bind-Checked="@context.IsDone"></MudCheckBox>
        </MudTd>
        <MudTd DataLabel="">
            <MudFab @onclick="@(()=>Edit(@context.ID))" Color="Color.Primary" Icon="@Icons.Material.Filled.Edit" Size="Size.Small" IconSize="Size.Small" />
            <MudFab @onclick="@(()=>Delete(@context.ID))" Color="Color.Secondary" Icon="@Icons.Material.Filled.Delete" Size="Size.Small" IconSize="Size.Small" />
        </MudTd>
    </RowTemplate>
</MudTable>


@code {
    private string searchString = "";
    private NoteItem note = new NoteItem();
    private List<NoteItem> notes = new List<NoteItem>();

    protected override async Task OnInitializedAsync()
    {
        GetItems();
    }

    private List<NoteItem> GetItems()
    {
        notes = NoteItemService.GetItems();
        return notes;   
    }
    private bool Search(NoteItem note)
    {
        if (string.IsNullOrWhiteSpace(searchString)) return true;
        if (note.Title is not null && note.Tags is not null && note.Contents is not null)
        {
            if (
                note.Title.Contains(searchString, StringComparison.OrdinalIgnoreCase)
                || note.Contents.Contains(searchString, StringComparison.OrdinalIgnoreCase)
                || note.Tags.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            {
                return true;
            }
        }
        return false;
    }
    private void Save()
    {
        NoteItemService.SaveItem(note);
        note = new NoteItem();
        snackBar.Add("Item Saved", Severity.Success);
        GetItems();
    }
    private void Edit(int id)
    {
        note = notes.FirstOrDefault(c => c.ID == id);
    }
    private void Delete(int id)
    {
        NoteItemService.DeleteItem(id);
        snackBar.Add("Item deleted", Severity.Success);
        GetItems();
    }
}